/* ==================================================================
  CSS Boilerplate
  The Unlicense <https://unlicense.org>
  https://github.com/MattMcAdams/CSS-Boilerplate
================================================================== */

/** -----------------------------------------------------------------
  * SECTION TOKENS
------------------------------------------------------------------ */

:root {
  /* Fonts */
  --font-body: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  --font-head: var(--font-body);
  --font-mono: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  /* --font-icon: null; */

  /* Colors */
  --color-gray-100: #F0F1F3;
  --color-gray-500: #707682;
  --color-gray-900: #2D2F34;
  /* https://hihayk.github.io/scale/#4/4/60/90/0/0/50/-10/707682/112/118/130/white */
  --color-red-100: #FFE6E6;
  --color-red-500: #DC2F2F;
  --color-red-900: #551616;
  /* https://hihayk.github.io/scale/#4/4/60/90/0/0/50/-10/DC2F2F/220/47/47/white */
  --color-yellow-100: #FFF9E6;
  --color-yellow-500: #D08200;
  --color-yellow-900: #4F3304;
  /* https://hihayk.github.io/scale/#4/4/60/90/0/-10/50/-10/D08200/208/130/0/white */
  --color-green-100: #E6F7EB;
  --color-green-500: #00883E;
  --color-green-900: #033419;
  /* https://hihayk.github.io/scale/#4/4/60/90/0/0/50/-10/00883E/0/136/62/white */
  --color-primary-100: #E6F1FF;
  --color-primary-500: #0074E0;
  --color-primary-900: #052E55;
  /* https://hihayk.github.io/scale/#4/4/60/90/0/0/50/-10/0074E0/0/116/224/white */

  /* Semantic Colors */
  --page-bg-color: white;
  --element-bg-color: var(--color-gray-100);
  --text-color: var(--color-gray-900);
  --light-text-color: var(--color-gray-500);
  --heading-color: var(--text-color);
  --highlight-color: var(--color-primary-100);
  --primary-alt: var(--color-primary-900);

  --nav-color: var(--color-primary-500);
  --button-color: var(--nav-color);

  --accent-color: var(--color-primary-500);

  /* Spacing */
  --space: 1.6rem; /* Should equal body line-height */
  --section-space: calc(var(--space) * 4);
  --flow-space: var(--space);
  --gutter: var(--space);
  --content-width: 900px;
  --sidebar-width: 300px;

  /* Modular Scale */
  --ratio: 1.2; /* 1.2 is very similar to default browser style */
  --ms-0: 1rem; /* 1rem = 16px | 1.25rem = 20px | 1.125rem = 18px */
  --ms-1: calc(var(--ms-0) * var(--ratio));
  --ms-2: calc(var(--ms-1) * var(--ratio));
  --ms-3: calc(var(--ms-2) * var(--ratio));
  --ms-4: calc(var(--ms-3) * var(--ratio));
  --ms-5: calc(var(--ms-4) * var(--ratio));
  --ms--1: calc(var(--ms-0) / var(--ratio));
  --ms--2: calc(var(--ms--1) / var(--ratio));
}

/* END !SECTION TOKENS */
/** -----------------------------------------------------------------
  * SECTION RESET
  * http://meyerweb.com/eric/tools/css/reset/
  * v2.0 | 20110126
  * License: none (public domain)
------------------------------------------------------------------ */

* {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote::before,
blockquote::after,
q::before,
q::after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* END !SECTION RESET */
/** -----------------------------------------------------------------
  * SECTION CORE
------------------------------------------------------------------ */

/* Links that point to a location on the same page will scroll
 * smoothly down to that location. */

@media (prefers-reduced-motion: no-preference) {
  html { scroll-behavior: smooth; }
}

/* Hide content visually, but allow screen readers to read the
 * content. Note that for Accessibility guidelines, this content
 * must become visible if toggled over using a keyboard. */

.visually-hidden:not(:focus):not(:active),
.sr-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* Give the hidden attribute most priority - fixes issue where
 * an html element can be marked as hidden but is still visible.
 * Use aria-hidden="true" to hide visual elements from
 * screen readers. */

[hidden] {
  display: none !important;
}

/* Ensures disabled elements do not accept events */

[disabled] {
  pointer-events: none !important;
  cursor: not-allowed !important;
}

/* Use primary color for focus styles */

:focus-visible {
  outline-color: var(--color-primary-500);
  outline-offset: 3px;
  outline-style: solid;
  outline-width: 2px;
}

/* Adds a margin above an element when it is the target of an ID link */

* {
  scroll-margin-top: var(--space);
  scroll-margin-bottom: var(--space);
}

::selection {
  background-color: var(--color-primary-100);
}

/** -----------------------------------------------------------------
  * SECTION TYPOGRAPHY
------------------------------------------------------------------ */

/* Set the document's default font, color, size, and line height */

body {
  font-family: var(--font-body);
  color: var(--text-color);
  line-height: 1.6;
  font-size: var(--ms-0);
}

/* Set font and flow margin to headings, and heading-like elements.
 * Setup utility classes for font sizes */

h1, h2, h3, h4, h5,
.txt-h1, .txt-h2, .txt-h3, .txt-h4, .txt-h5, .txt-h6,
label, th, legend {
  /* font-family: var(--font-head); */
  margin-bottom: var(--flow-space);
}

/* Double flow spacing before headings & set heading color. */

h1, h2, h3, h4, h5, h6,
.txt-h1, .txt-h2, .txt-h3, .txt-h4, .txt-h5, .txt-h6 {
  margin-top: calc(var(--flow-space) * 2);
  /* color: var(--heading-color); */
  line-height: 1.2;
}

/* Decrease space between sequential headings */

h1 + h2,
h2 + h3,
h3 + h4,
h4 + h5,
h5 + h6,
.txt-h1 + .txt-h2,
.txt-h2 + .txt-h3,
.txt-h3 + .txt-h4,
.txt-h4 + .txt-h5,
.txt-h5 + .txt-h6 {
  margin-top: 0;
}

/* Add flow spacing after paragraphs */

p, .txt-p {
  margin-bottom: var(--flow-space);
}

/* Heading typography */

h1, .txt-h1 { font-size: var(--ms-5); margin-top: 0;}
h2, .txt-h2 { font-size: var(--ms-4); }
h3, .txt-h3 { font-size: var(--ms-3); }
h4, .txt-h4 { font-size: var(--ms-2); }
h5, .txt-h5 { font-size: var(--ms-1); }
h6, .txt-h6, label, th, legend { font-size: var(--ms-0); font-weight: bold; }

/* Set typography for small text */

small, .txt-small { font-size: var(--ms--1); line-height: 1.3; }

/* Basic styles for inline semantics */

strong { font-weight: bold; }
em, cite { font-style: italic; }
u { text-decoration: underline; font-style: normal;}

/* Basic style for subscript and superscript text */

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}
sup { top: -0.5em; }
sub { bottom: -0.25em; }

/* del, ins, and s styles. Note that these are opinionated and may
 * need to be restyled to suit your use case. These pseudoelements
 * exist to announce the presence of these elements. Read more
 * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins#accessibility_concerns */

del::before,
del::after,
ins::before,
ins::after,
s::before,
s::after {
  clip-path: inset(100%);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

del::before { content: " [deletion start] "; }
del::after { content: " [deletion end] "; }
ins::before { content: " [insertion start] "; }
ins::after { content: " [insertion end] "; }
s::before { content: " [start of stricken text] "; }
s::after { content: " [end of stricken text] "; }

del {
  background: var(--color-red-100);
  text-decoration: line-through;
  padding: 0.1em 0.3em;
}

ins {
  background: var(--color-green-100);
  text-decoration: none;
  padding: 0.1em 0.3em;
}

/* See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s */

s { text-decoration: line-through; }

/* Mark styles - see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark */

mark {
  background: var(--color-yellow-100);
  padding: 0.1em 0.3em;
}

/* Basic styles for abbreviation. Only style differently when
 * a title is present. */

abbr { text-decoration: none; }
abbr[title] {
  cursor: help;
  text-decoration: underline;
  text-decoration-style: dotted;
}

/* Italisize q when it includes a cite */

q[cite] { font-style: italic; }

/* Add flow spacing after address */

address {
  margin-bottom: var(--flow-space);
}

/* END !SECTION TYPOGRAPHY */
/** -----------------------------------------------------------------
  * SECTION LINKS
  * :not([class]) is so that the styles won't need to be overridden
  * in special use cases like navigation / buttons
------------------------------------------------------------------ */

a:not([class]) {
  color: var(--color-primary-500);
  text-decoration: none;
  font-weight: bold;
}

/* VISITED STYLES GO HERE */

a:not([class]):hover,
a:not([class]):focus {
  text-decoration: underline;
  text-decoration-color: var(--color-primary-500);
  text-decoration-thickness: 2px;
}

/*
OPTIONAL STYLES
Add an icon for links that go to a PDF and/or links that open in a new tab
*/

/* a:not([class])[target="_blank"]::after,
a:not([class])[data-link-type="external"] {
  content: ' \e91f';
  font-size: 90%;
}

a:not([class])[href$='.pdf']::after,
a:not([class])[data-link-type='document']::after {
  content: '\e91d';
  font-size: 90%;
  padding-left: 0.1em;
} */

/* END !SECTION LINKS */
/** -----------------------------------------------------------------
  * SECTION BLOCKQUOTE
------------------------------------------------------------------ */

/* Add basic styling for blockquotes, and provide a utility class
 * to apply these styles outside of a quote context */

blockquote,
.callout {
  border-left: 5px solid var(--color-primary-500);
  padding: calc(var(--space) / 2) var(--space);
  background-color: var(--color-primary-100);
  margin-bottom: var(--flow-space);
}

/* Remove the bottom margin from the last child in the blockquote */

blockquote :last-child,
.callout :last-child {
  margin-bottom: 0;
}

/* END !SECTION BLOCKQUOTE */
/** -----------------------------------------------------------------
  * SECTION LISTS
  * :not([class]) is so that the styles won't need to be overridden
  * in special use cases. For example, when list markup might need
  * to be paired with a grid layout
------------------------------------------------------------------ */

/* Set nested unordered list styles */

ul:not([class]) { list-style-type: disc; }
ul:not([class]) ul:not([class]) { list-style-type: circle; }
ul:not([class]) ul:not([class]) ul:not([class]) { list-style-type: square; }

/* Set nested ordered list styles */

ol:not([class]) { list-style-type: decimal; }
ol:not([class]) ol:not([class]) { list-style-type: upper-alpha; }
ol:not([class]) ol:not([class]) ol:not([class]) { list-style-type: lower-roman; }

/* Set indention and flow spacing for lists */

ul:not([class]), ol:not([class]) {
  margin-left: var(--space);
}

/* Add flow spacing to list elements */

ul, ol, dl {
  margin-bottom: var(--flow-space);
}

/* Add spacing between list items */

ul:not([class]) li,
ul:not([class]) ol,
ul:not([class]) ul,
ol:not([class]) li,
ol:not([class]) ol,
ol:not([class]) ul {
  margin-bottom: calc(var(--flow-space) / 4);
}

/* Ensure nested lists have the correct spacing */

ul:not([class]) ol,
ul:not([class]) ul,
ol:not([class]) ol,
ol:not([class]) ul {
  margin-top: calc(var(--flow-space) / 4);
}

/* Add basic styles for definition lists */

dt { font-weight: bold; }
dd { padding-left: var(--space); }

/* END !SECTION LISTS */
/** -----------------------------------------------------------------
  * SECTION MEDIA
------------------------------------------------------------------ */

/* Allow media to sit correctly in content flow */

img,
figure,
video,
.aspect-ratio,
.video-wrapper,
.embed-container {
  display: block;
  width: 100%;
  margin: auto;
  margin-bottom: var(--flow-space);
}

img {
  max-width: 100%;
  width: auto;
  height: auto;
}

/* Let SVG scale without boundaries */
img[src$=".svg"] {
  width: 100%;
  height: auto;
  max-width: none;
}

/* Basic style for figcaption */

figcaption {
  display: block;
  text-align: center;
  font-style: italic;
}

/* Allow audio to sit correctly in content flow,
 * Adjust border radius to allow consistency across browsers */

audio {
  display: block;
  max-width: 100%;
  border-radius: 900px;
  margin-bottom: var(--flow-space);
}

/* Setup media wrappers */

.aspect-ratio,
.video-wrapper,
.embed-container {
  width: 100%;
  padding-top: calc(100%/(var(--aspect-ratio)));
  position: relative;
}

/* Define aspect ratios */

.video-wrapper,
.embed-container,
.sixteen-by-nine { --aspect-ratio: 16/9; }
.one-by-one { --aspect-ratio: 1/1; }
.three-by-two { --aspect-ratio: 3/2; }
.four-by-three { --aspect-ratio: 3/2; }
.eight-by-five { --aspect-ratio: 8/5; }

/* Position inner elements in media wrappers */

.embed-container > iframe,
.embed-container > embed,
.embed-container > object,
.video-wrapper > iframe,
.video-wrapper > embed,
.video-wrapper > object
.aspect-ratio > iframe,
.aspect-ratio > embed,
.aspect-ratio > object,
.aspect-ratio > img {
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  height: 100%;
  width: 100%;
}

/* Allow img to crop to avoid being stretched */

.aspect-ratio > img {
  object-fit: cover;
}

/* Wrapper to allow horizontal overflow,
 * Useful for tables and other wide content */

.overflow-x,
.table-wrapper {
  overflow-x: auto;
}

/* END !SECTION MEDIA */
/** -----------------------------------------------------------------
  * SECTION RULES
------------------------------------------------------------------ */

hr {
  border: none;
  border-bottom: 0.5px solid var(--light-text-color);
  width: 100%;
  margin-bottom: var(--flow-space);
}

hr.spacer {
  border: none;
  margin: calc(var(--flow-space) * 2) 0;
}

/* END !SECTION MISC */
/** -----------------------------------------------------------------
  * SECTION TABLES
------------------------------------------------------------------ */

table {
  width: 100%;
  margin-bottom: var(--flow-space);
}

caption {
  padding: calc(var(--space) / 2);
  font-family: var(--font-head);
  font-weight: bold;
}

th, td {
  padding: calc(var(--space) / 2);
  text-align: left;
}

tr {
  border-bottom: 0.5px solid var(--light-text-color);
}

tr:hover {
  background-color: var(--element-bg-color);
}

/* END !SECTION TABLES */
/** -----------------------------------------------------------------
  * SECTION CODE
------------------------------------------------------------------ */

code, samp, kbd, var {
  font-family: var(--font-mono);
  padding: 0.1em 0.3em;
}

code, samp {
  background-color: var(--element-bg-color);
}

var {
  font-style: italic;
  font-weight: bold;
}

kbd {
  background-color: var(--text-color);
  color: white;
  border-radius: 5px;
}

pre {
  margin-bottom: var(--flow-space);
}

pre code,
pre samp {
  display: block;
  padding: var(--space);
  overflow: auto;
}

/* END !SECTION CODE */
/** -----------------------------------------------------------------
  * SECTION DETAILS
------------------------------------------------------------------ */

/* Display:block removes Firefox's marker
 * ::webkit-details-marker removed Chrome & Safair's marker */

details {
  display: block;
  position: relative;
  margin-bottom: var(--flow-space);
}

summary::-webkit-details-marker {
  display: none;
}

summary {
  display: block;
  cursor: pointer;
  padding-left: 1.5em;
  font-weight: bold;
}

summary::before {
  position: absolute;
  will-change: transform;
  transition: transform 300ms ease;
  font-size: 1em;
  content: "▸";
  left: 0;
  display: inline-block;
  text-align: center;
  width: 1em;
}

summary:focus::before {
  color: var(--color-primary-500);
}

details[open] > summary::before {
  transform: rotate(90deg);
}

details .details-content {
  padding-left: 1.5em;
}

/* END !SECTION DETAILS */
/* END !SECTION CORE */
/** -----------------------------------------------------------------
  * SECTION FORMS
  * Form elements not styled:
  * Meter. Next to impossible to size consistently
  * File. You're better off implementing something with JS
  * Date & Color. Styling these is far too complicated for the
  * scope of this project.
------------------------------------------------------------------ */

label, legend {
  font-weight: bold;
  background-color: transparent;
  display: block;
  margin-bottom: 0;
}

label + label {
  margin-top: calc(var(--space) / 2);
}

label.required::after {
  content: " *";
  color: var(--color-red-500);
}

fieldset {
  border: 0.5px solid var(--color-gray-500);
  padding: var(--space);
  margin-bottom: var(--space);
  background-color: var(--color-gray-100);
}

fieldset > :last-child {
  margin-bottom: 1rem;
}

legend {
  padding: 0 0.5em;
  margin-left: -0.5em;
}

/* Normalize fonts, sizes, and borders */
.button, button, input, select, textarea, datalist {
  font-family: inherit;
  font-size: 100%;
  line-height: inherit;
  box-sizing: border-box;

  padding: calc(var(--space) / 4) calc(var(--space) / 2);
  border: 1px solid var(--light-text-color);
  margin: 0;
  margin-bottom: var(--flow-space);
}

/* Normalize input width */
.button, input, select, textarea, datalist {
  width: 100%;
}

textarea {
  resize: vertical;
  min-height: 10rem;
}

input:active,
input:focus,
textarea:active,
textarea:focus,
select:active,
select:focus,
datalist:focus,
datalist:active {
  outline-offset: 1px;
}

/** -----------------------------------------------------------------
  * SECTION RADIO & CHECKBOX
------------------------------------------------------------------ */

@supports (appearance: none) or (-moz-appearance: none) or (-webkit-appearance: none)  {
  input[type="checkbox"],
  input[type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    position: relative;
    display: inline-block;
    top: -0.1em;
    width: 1em;
    height: 1em;
    padding: 0;
    margin: 0;
    vertical-align: middle;
    transition: box-shadow 0.1s ease;
  }

  input[type="checkbox"]:checked,
  input[type="radio"]:checked {
    box-shadow: inset 0 0 0 .25em var(--color-primary-500);
    border-color: var(--color-primary-500);
  }

  input[type="radio"] {
    border-radius: 50%;
  }
}

/* END !SECTION RADIO & CHECKBOX */
/** -----------------------------------------------------------------
  * SECTION NUMBER, SELECT, SEARCH
------------------------------------------------------------------ */

/* Remove increment/decrement buttons from number fields */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  appearance: none;
}
input[type="number"] {
  -moz-appearance: textfield;
}

/* Hide the default arrow icon and implement a custom one */
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; /* hides the native UI */

  padding-right: calc(var(--space) * 2); /* prevents input text from running into background image */

  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8" fill="none" stroke="black"><path d="M7.5 3L4 6 .5 3"/></svg>');
  background-size: 0.7em;
  background-repeat: no-repeat;
  background-position: right calc(var(--space) / 2) center;
}

/* Remove the chrome cancel button */
input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

/* END !SECTION NUMBER, SELECT, SEARCH */
/** -----------------------------------------------------------------
  * SECTION PROGRESS
------------------------------------------------------------------ */

/* Normalize progress bar */
progress[value] {
  border: 0;
  background-color: var(--element-bg-color);
  -webkit-appearance: none;
  display: block;
  width: 100%;
  margin-bottom: var(--flow-space);
}

progress[value]::-webkit-progress-bar {
  background-color: var(--element-bg-color);
}

progress[value]::-webkit-progress-value {
  background: var(--color-primary-500);
}
progress[value]::-moz-progress-bar {
  background: var(--color-primary-500);
}

/* indeterminate styles
 * progress:not([value]) {} */

/* END !SECTION PROGRESS */
/** -----------------------------------------------------------------
  * SECTION RANGE
------------------------------------------------------------------ */

input[type="range"],
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  font-size: 1rem;
  padding: 0;
  border: none;
}

input[type="range"]:focus,
input[type="range"]:active {
  outline: none;
  --color-gray-500: var(--color-primary-500);
}

/* Track Styles */
input[type="range"]::-webkit-slider-runnable-track {
  border: none;
  height: 5px;
  border-radius: 0;
  background-color: var(--element-bg-color);
}
input[type="range"]::-moz-range-track {
  height: 5px;
  border: none;
  border-radius: 0;
  background-color: var(--element-bg-color);
}

/* Thumb Styles */
input[type="range"]::-webkit-slider-thumb {
  margin-top: -0.5rem;
  width: 1.2rem;
  height: 1.2rem;
  border: 2px solid var(--page-bg-color);
  border-radius: 1000rem;
  background: var(--color-gray-500);
}
input[type="range"]::-moz-range-thumb {
  border: 2px solid var(--page-bg-color);
  border-radius: 1000rem;
  font-size: 1.2rem;
  background: var(--color-gray-500);
}

/* END !SECTION RANGE */
/* END !SECTION FORMS */
/** -----------------------------------------------------------------
  * SECTION BUTTONS
------------------------------------------------------------------ */

label + button,
label + .button,
label + input[type="submit"],
label + input[type="reset"],
label + input[type="button"] {
  margin-top: var(--space);
}

.button,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  width: auto;
  background-color: transparent;
  cursor: pointer;
  box-sizing: border-box;

  color: white;
  background-color: var(--color-primary-500);
  border: 1px solid var(--color-primary-500);
  margin-bottom: var(--space);
}

.button:hover,
button:hover,
input[type="submit"]:hover,
input[type="reset"]:hover,
input[type="button"]:hover,
.button:focus,
button:focus,
input[type="submit"]:focus,
input[type="reset"]:focus,
input[type="button"]:focus {
  border-color: var(--color-primary-900);
  background-color: var(--color-primary-900);
}

input[type="submit"]:active,
input[type="submit"]:focus,
input[type="reset"]:active,
input[type="reset"]:focus,
input[type="button"]:active,
input[type="button"]:focus {
  outline-offset: 3px;
}

.button[tabindex="-1"],
button[disabled],
input[type="submit"][disabled],
input[type="reset"][disabled],
input[type="button"][disabled] {
  background-color: var(--element-bg-color);
  color: var(--color-gray-500);
  border-color: var(--element-bg-color);
}

/* END !SECTION BUTTONS */
/** -----------------------------------------------------------------
  * SECTION LAYOUT
------------------------------------------------------------------ */

/* Section spacing */

.section { margin: var(--section-space) 0; }

/* Standard content container */

.container {
  max-width: var(--content-width);
  padding: 0 var(--gutter);
  margin: 0 auto;
  width: 100%;
}
.container-wide {
  max-width: calc(var(--content-width) + var(--gutter) + var(--sidebar-width) + var(--section-space))
}

/** -----------------------------------------------------------------
  * SECTION FLOW SPACING
  * Use flow spacing in flow areas, provide a fallback for browsers
  * that don't support css variables
------------------------------------------------------------------ */

/* .flow > * + * {
  margin-top: 1.5rem;
  margin-top: var(--flow-space);
}

.flow > * + h1,
.flow > * + h2,
.flow > * + h3,
.flow > * + h4,
.flow > * + h5,
.flow > * + h6,
.flow > * + .txt-h1,
.flow > * + .txt-h2,
.flow > * + .txt-h3,
.flow > * + .txt-h4,
.flow > * + .txt-h5,
.flow > * + .txt-h6 {
  margin-top: 1.5rem;
  margin-top: calc(var(--flow-space) * 2);
}

.flow > h1 + h2,
.flow > h2 + h3,
.flow > h3 + h4,
.flow > h4 + h5,
.flow > h5 + h6,
.flow > .txt-h1 + .txt-h2,
.flow > .txt-h2 + .txt-h3,
.flow > .txt-h3 + .txt-h4,
.flow > .txt-h4 + .txt-h5,
.flow > .txt-h5 + .txt-h6 {
  margin-top: 1.5rem;
  margin-top: calc(var(--flow-space) * 0.5);
} */

/* END !SECTION FLOW SPACING */
/** -----------------------------------------------------------------
  * SECTION LEVEL
------------------------------------------------------------------ */

/* Level
 * Creates a bar with content vertically aligned on both sides
 * Good for split navigation bars etc. */

.level {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin: calc(var(--space) / -2);
}

/* The first level item will be aligned to the left of the level
 * the second will be aligned to the right.
 * You can add more items, they will be evenly spaced,
 * though 2 is recommended */

.level_item {
  align-self: center;
  display: block;
  padding: calc(var(--space) / 2);
}

/* END !SECTION LEVEL */
/** -----------------------------------------------------------------
  * SECTION GRID
------------------------------------------------------------------ */

/* Super simple grid
 * min-width should be just under the pixel value in minmax * 2
 * This helps avoid grid blowout on screens smaller than the
 * preferred min-width of a grid item. */

@media ( min-width: 400px ) {
  .grid {
    --grid-gap: var(--space);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: var(--grid-gap);
  }
}

@media ( orientation: portrait ) and ( min-width: 400px ) {
  .grid-portrait {
    --grid-gap: var(--space);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: var(--grid-gap);
  }
}

@media ( orientation: landscape ) and (min-width: 400px ) {
  .grid-landscape {
    --grid-gap: var(--space);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: var(--grid-gap);
  }
}

/* END !SECTION GRID */
/** -----------------------------------------------------------------
  * SECTION PAGE SCAFFOLDING
  <template>
    <div id="app">

      <header id="top-header">
        <div class="container"></div>
      </header>

      IF SIDEBAR
      <div id="main" class="has-sidebar">
        <div class="sidebar"></div>
        <main class="content"></main>
      </div>

      IF NO SIDEBAR
      <main id="main" class="container">
      </main>

      <footer id="footer">
        <div class="container"></div>
      </footer>

    </div>
  </template>
------------------------------------------------------------------ */

/* Setup page container
 * This, and the next three style declarations help fix an
 * issue so that the page will never be shorter than the
 * screen is tall. This ensures the footer will always
 * be at the bottom of the page. */

#app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  max-width: 100vw;
}

/* Stick the top header to the top of the screen
 * Good place to put a level with some navigation */

#top-header {
  position: absolute;
  z-index: 1000;
  width: 100%;
}

/* The main content will absorb any free vertical space,
 * pushing the footer neatly to the bottom.
 *
 * Extra space is given above and below the main area between the
 * header and footer (or the top and bottom of the page when such
 * elements don't exist) */

#main {
  width: 100%;
  flex: 1 0 auto;
  align-self: center;
  padding-top: calc(var(--space) * 5);
  padding-bottom: calc(var(--space) * 5);
}

/* Ensure footer does not shrink */

#footer { flex-shrink: 0; }



/* SIDEBAR LAYOUT */

/* Container of content & sidebar
 * Max width equals the combined width of the sidebar, content,
 * and the space between them.
 *
 * Setup grid layout. Display sidebar under the content by default
 * This mostly matters for mobile.
 * Add space between content and sidebar */

.has-sidebar {
  max-width: calc(var(--content-width) + var(--section-space) + var(--sidebar-width));
  padding: 0 var(--gutter);
  margin: 0 auto;

  display: grid;
  grid-template-areas: "content" "sidebar";
  grid-gap: var(--section-space);
}


/* Assign sidebar to the sidebar area,
 * Assign content to the content area */

.has-sidebar > .sidebar { grid-area: sidebar; }
.has-sidebar > .content { grid-area: content; }

/* On landscape, adjust layout for two columns,
 * Arange areas so that the sidebar is on the left side of content.
 * minmax prevents content from being larger than screen width */

@media ( orientation: landscape ) {
  .has-sidebar {
    grid-template-columns: var(--sidebar-width) minmax(1px, 1fr);
    grid-template-areas: "sidebar content"
  }
}

/* END !SECTION PAGE SCAFFOLDING */
/* END !SECTION LAYOUT */
/** -----------------------------------------------------------------
  * SECTION ACCORDION
  * Border radius has been commented out to avoid being too
  * opinionated, but left in so you can see how to implement it
------------------------------------------------------------------ */

details.accordion summary {
  display: block;
  cursor: pointer;
  padding: calc(var(--space)/2);
  padding-left: calc(var(--space) + 1em);
  background: var(--element-bg-color);
  /*border-radius: 5px;*/
}

details.accordion summary::before {
  left: calc(var(--space)/2);
}

/*details.accordion[open] > summary {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}*/

details.accordion .details-content {
  padding: calc(var(--space) / 2);
  padding-left: calc(var(--space) + 1rem);
  border: 2px solid var(--element-bg-color);
  /*border-bottom-right-radius: 5px;
  border-bottom-left-radius: 5px;*/
}

/* END !SECTION ACCORDION */
/* Clearfix if you still need that sort of thing */

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

/* Utility to make any element cover the area of it's parent.
 * You will have to give the parent { position: relative; } though */

.cover {
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  object-fit: cover;
}

/* Center utility */

.center {
  display: grid;
  place-items: center;
}
